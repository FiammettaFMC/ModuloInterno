{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///external \"@grafana/ui\"","webpack:///./panels/PredictionPanel/utils/Data.ts","webpack:///./common/Predictor.ts","webpack:///./panels/PredictionPanel/utils/AbstractData.ts","webpack:///./common/OptionsRegression.ts","webpack:///./panels/PredictionPanel/utils/Predicted.ts","webpack:///./panels/PredictionPanel/strategies/RL/StrategyRL.ts","webpack:///./panels/PredictionPanel/strategies/REXP/StrategyREXP.ts","webpack:///./panels/PredictionPanel/strategies/RLOG/StrategyRLOG.ts","webpack:///./panels/PredictionPanel/strategies/SVM/StrategySVM.ts","webpack:///./panels/PredictionPanel/strategies/Config.ts","webpack:///./panels/PredictionPanel/strategies/RL/ConfigRL.tsx","webpack:///./panels/PredictionPanel/strategies/REXP/ConfigREXP.tsx","webpack:///./panels/PredictionPanel/strategies/RLOG/ConfigRLOG.tsx","webpack:///./panels/PredictionPanel/strategies/SVM/ConfigSVM.tsx","webpack:///./panels/PredictionPanel/strategies/strategies.ts","webpack:///./common/OptionsSVM.ts","webpack:///external \"@grafana/data\"","webpack:///./panels/PredictionPanel/Model.ts","webpack:///./panels/PredictionPanel/PanelView.tsx","webpack:///./panels/PredictionPanel/PanelController.tsx","webpack:///./panels/PredictionPanel/EditorView.tsx","webpack:///./panels/PredictionPanel/module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","length","push","__values","__WEBPACK_EXTERNAL_MODULE__2__","addValues","val","data","a","time","getAt","index","fromSeries","series","Error","fields","values","toArray","forEach","serie","Data","keys","algorithm","coefficients","predFun","opt","acc","accuracy","getAlgorithm","getCoefficients","getPredFun","getOpt","getAcc","setOpt","conf","setValueFile","fromJSON","str","json","JSON","parse","console","log","Predictor","toJSON","stringify","GroupName","Version","PluginName","clear","size","order","precision","toPredict","config","predictor","getOrder","getPrecision","getToPredict","setPrecision","setToPredict","AbstractData","predicted","predict","base","coeff","x","it","saveToInflux","$","post","url","diff","Math","abs","exp","first","getFirstQuery","x1","x2","cls","meas","getSeriesNames","props","map","renderQueryOptions","seriesName","options","selected","Number","parseInt","render","title","className","style","display","onChange","event","target","setFirstQuery","strategies","RL","SVM","REXP","RLOG","configs","C","maxiter","numpass","firstQuery","getC","getMaxIter","getNumPass","setC","setMaxIter","setNumPass","__WEBPACK_EXTERNAL_MODULE__10__","setData","setPredictor","strategy","pause","btn_stop","hidden","btn_start","start","componentDidMount","document","getElementById","lastValue","textAlign","id","onClick","paused","model","updatePrediction","parsePredictor","importPredictor","reader","FileReader","files","readAsText","onload","toString","alert","Config","PureComponent","type","setEditor"],"mappings":"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","file":"panels/PredictionPanel/module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","/**\n * Project: Predire in Grafana\n * File: Data.ts\n * Author: Federico Carboni\n * Created: 2020-04-15\n * Version: 0.1\n * -----------------------------------------------------------------------------------------\n * Copyright 2020 ProApesGroup.\n * Licensed under the MIT License. See LICENSE in the project root for license informations.\n * -----------------------------------------------------------------------------------------\n * Changelog:\n * 0.1 - Writing Data class for incpsulation of measured data.\n */\n\nimport { DataFrame } from '@grafana/data';\nimport { Iterator, AbstractData } from './AbstractData';\n\ninterface ValType {\n    a: number;\n    b: number;\n    time: number;\n}\n\nexport class Data extends AbstractData<ValType> {\n    addValues(val: ValType) {\n        this.data.push([val.a, val.b, val.time]);\n    }\n\n    getAt(index: number): ValType {\n        return {\n            a: this.data[index][0],\n            b: this.data[index][1],\n            time: this.data[index][2],\n        };\n    }\n\n    static fromSeries(series: DataFrame[]): Data {\n        if (!series[0] || !series[1]) {\n            throw Error('Set at least 2 query before');\n        }\n\n        const time = series[0].fields[1].values.toArray();\n        const s: number[][] = []; // [ [valA, valA ...] [valB, valB ...] ]\n        series.forEach(serie => {\n            s.push(serie.fields[0].values.toArray());\n        });\n        let data = new Data();\n        for (const i of time.keys()) {\n            data.addValues({ a: s[0][i], b: s[1][i], time: time[i] });\n        }\n        return data;\n    }\n}\n\nexport class DataIterator extends Iterator<ValType> {}\n","/**\n * Project: Predire in Grafana\n * File: Predictor.ts\n * Author: Federico Carboni\n * Created: 2020-04-16\n * Version: 0.1\n * -----------------------------------------------------------------------------------------\n * Copyright 2020 ProApesGroup.\n * Licensed under the MIT License. See LICENSE in the project root for license informations.\n * -----------------------------------------------------------------------------------------\n * Changelog:\n * 0.1 - Writing Predictor class for incpsulation of pred info.\n */\n\nimport Option from './Options';\nimport { options } from '../panels/PredictionPanel/strategies/strategies';\n\nexport default class Predictor<Opt extends Option> {\n    private algorithm: string;\n    private coefficients: number[];\n    private predFun: string;\n    private opt: Opt;\n    private accuracy?: number;\n\n    constructor(algorithm: string, coefficients: number[], predFun: string, opt: Opt, acc?: number) {\n        this.algorithm = algorithm;\n        this.coefficients = coefficients;\n        this.predFun = predFun;\n        this.opt = opt;\n        if (acc) {\n            this.accuracy = acc;\n        }\n    }\n\n    getAlgorithm(): string {\n        return this.algorithm;\n    }\n\n    getCoefficients(): number[] {\n        return this.coefficients;\n    }\n\n    getPredFun(): string {\n        return this.predFun;\n    }\n\n    getOpt(): Opt {\n        return this.opt;\n    }\n\n    getAcc(): number | undefined {\n        return this.accuracy;\n    }\n\n    setOpt(conf: string) {\n        this.opt?.setValueFile(conf);\n    }\n\n    static fromJSON(str: string | undefined): Predictor<Option> {\n        if (!str) {\n            throw Error('No file found');\n        }\n\n        let json = JSON.parse(str);\n        let opt = options[json.algorithm];\n\n        console.log(str);\n        console.log(json);\n\n        // if (!json.algorithm || !json.coefficients) {\n        //     throw Error('Error reading file');\n        // }\n\n        let predictor = new Predictor(\n            json.algorithm,\n            json.coefficients,\n            json.predFun || '',\n            opt.fromJSON(json.opt || {}),\n            json.accuracy\n        );\n\n        return predictor;\n    }\n\n    toJSON(): string {\n        const textFile = JSON.stringify(\n            {\n                GroupName: 'ProApes',\n                Version: '1.5',\n                PluginName: 'PredireInGrafana',\n                algorithm: this.algorithm,\n                coefficients: this.coefficients,\n                predFun: this.predFun,\n                opt: this.opt,\n                accuracy: this.accuracy,\n            },\n            null,\n            2\n        ); // string output\n\n        return textFile;\n    }\n}\n","/**\n * Project: Predire in Grafana\n * File: AbstractData.ts\n * Author: Federico Carboni\n * Created: 2020-04-27\n * Version: 0.1\n * -----------------------------------------------------------------------------------------\n * Copyright 2020 ProApesGroup.\n * Licensed under the MIT License. See LICENSE in the project root for license informations.\n * -----------------------------------------------------------------------------------------\n * Changelog:\n * 0.1 - Abstract class for Data and Predicted.\n */\n\nexport abstract class AbstractData<T> {\n    protected data: number[][];\n\n    constructor() {\n        this.data = [];\n    }\n\n    clear() {\n        this.data = [];\n    }\n\n    size() {\n        return this.data.length;\n    }\n\n    abstract addValues(val: T): void;\n    abstract getAt(index: number): T;\n}\n\nexport abstract class Iterator<T> {\n    private index = 0;\n    private data: AbstractData<T>;\n\n    constructor(data: AbstractData<T>) {\n        this.data = data;\n    }\n\n    next() {\n        return this.index < this.data.size() ? this.data.getAt(this.index++) : null;\n    }\n}\n","import Option from './Options';\n\nexport default class OptionRegression implements Option {\n    private order = 2;\n    private precision = 2;\n    private toPredict = 0;\n\n    fromJSON(json: { order: number; precision: number; toPredict: number }) {\n        this.order = json.order;\n        this.precision = json.precision;\n        this.toPredict = json.toPredict || 0;\n        return this;\n    }\n\n    setValueFile(config: string): void {\n        try {\n            let predictor = JSON.parse(config);\n            this.order = predictor.opt.order;\n            this.precision = predictor.opt.precision;\n        } catch (e) {\n            throw new Error('Predictor bad formatted');\n        }\n    }\n\n    getOrder() {\n        return this.order;\n    }\n\n    getPrecision() {\n        return this.precision;\n    }\n\n    getToPredict() {\n        return this.toPredict;\n    }\n\n    setPrecision(p: number): void {\n        this.precision = p;\n    }\n\n    setToPredict(toPredict: number): void {\n        this.toPredict = toPredict;\n    }\n}\n","/**\n * Project: Predire in Grafana\n * File: Predicted.ts\n * Author: Federico Carboni\n * Created: 2020-04-15\n * Version: 0.1\n * -----------------------------------------------------------------------------------------\n * Copyright 2020 ProApesGroup.\n * Licensed under the MIT License. See LICENSE in the project root for license informations.\n * -----------------------------------------------------------------------------------------\n * Changelog:\n * 0.1 - Writing Predicted class for incpsulation of predicted data.\n */\n\nimport { Iterator, AbstractData } from './AbstractData';\n\ninterface ValType {\n    value: number;\n    time: number;\n}\n\nexport class Predicted extends AbstractData<ValType> {\n    addValues(val: ValType) {\n        this.data.push([val.value, val.time]);\n    }\n\n    getAt(index: number): ValType {\n        return {\n            value: this.data[index][0],\n            time: this.data[index][1],\n        };\n    }\n}\n\nexport class PredIterator extends Iterator<ValType> {}\n","import { Strategy } from '../Strategy';\nimport { Data, DataIterator } from '../../utils/Data';\nimport { Predicted } from '../../utils/Predicted';\nimport Predictor from '../../../../common/Predictor';\nimport OptionRL from '../../../../common/OptionsRegression';\n\nexport class StrategyRL implements Strategy {\n    predicted: Predicted = new Predicted();\n    data!: Data;\n    toPredict?: number;\n\n    predict(data: Data, predictor: Predictor<OptionRL>) {\n        this.predicted.clear();\n\n        this.toPredict = predictor.getOpt().getToPredict();\n        const base = 1 - (this.toPredict || 0); //the other one\n        const coeff = predictor.getCoefficients();\n\n        const f = (x: number) => {\n            return x ? x * coeff[0] + coeff[1] : 0;\n        };\n\n        if (!data) {\n            throw Error('Data not found');\n        }\n\n        this.data = data;\n\n        let it = new DataIterator(this.data);\n        let val;\n        while ((val = it.next())) {\n            if (val.a || val.b) {\n                this.predicted.addValues({ value: f(base === 0 ? val.a : val.b), time: val.time });\n            }\n        }\n\n        return this.predicted;\n    }\n\n    saveToInflux() {\n        const index = this.predicted.size() - 1;\n\n        $.post({\n            url: 'http://localhost:8086/write?db=telegraf',\n            data:\n                'predictionRL value=' +\n                this.predicted.getAt(index).value +\n                ' ' +\n                this.predicted.getAt(index).time +\n                '000000', // + zeros for wrong time format\n        });\n\n        const time = this.predicted.getAt(index).time;\n        let diff;\n        if (!this.toPredict || this.toPredict === 0) {\n            diff = this.data.getAt(index).a - this.predicted.getAt(index).value;\n        } else {\n            diff = this.data.getAt(index).b - this.predicted.getAt(index).value;\n        }\n\n        $.post({\n            url: 'http://localhost:8086/write?db=telegraf',\n            data: 'predictionDiffRL value=' + Math.abs(diff) + ' ' + time + '000000', // + zeros for wrong time format\n        });\n    }\n}\n","import { Strategy } from '../Strategy';\nimport { Data, DataIterator } from '../../utils/Data';\nimport { Predicted } from '../../utils/Predicted';\nimport Predictor from '../../../../common/Predictor';\nimport OptionRL from '../../../../common/OptionsRegression';\n\nexport class StrategyREXP implements Strategy {\n    predicted: Predicted = new Predicted();\n    data!: Data;\n    toPredict?: number;\n\n    predict(data: Data, predictor: Predictor<OptionRL>) {\n        this.predicted.clear();\n\n        this.toPredict = predictor.getOpt().getToPredict();\n        const base = 1 - (this.toPredict || 0); //the other one\n        const coeff = predictor.getCoefficients();\n\n        const f = (x: number) => {\n            return coeff[0] * Math.exp(coeff[1] * x);\n        };\n\n        if (!data) {\n            throw Error('Data not found');\n        }\n\n        this.data = data;\n\n        let it = new DataIterator(this.data);\n        let val;\n        while ((val = it.next())) {\n            if (val.a || val.b) {\n                this.predicted.addValues({ value: f(base === 0 ? val.a : val.b), time: val.time });\n            }\n        }\n\n        return this.predicted;\n    }\n\n    saveToInflux() {\n        const index = this.predicted.size() - 1;\n\n        $.post({\n            url: 'http://localhost:8086/write?db=telegraf',\n            data:\n                'predictionREXP value=' +\n                this.predicted.getAt(index).value +\n                ' ' +\n                this.predicted.getAt(index).time +\n                '000000', // + zeros for wrong time format\n        });\n\n        const time = this.predicted.getAt(index).time;\n        let diff;\n        if (!this.toPredict || this.toPredict === 0) {\n            diff = this.data.getAt(index).a - this.predicted.getAt(index).value;\n        } else {\n            diff = this.data.getAt(index).b - this.predicted.getAt(index).value;\n        }\n\n        $.post({\n            url: 'http://localhost:8086/write?db=telegraf',\n            data: 'predictionDiffREXP value=' + Math.abs(diff) + ' ' + time + '000000', // + zeros for wrong time format\n        });\n    }\n}\n","import { Strategy } from '../Strategy';\nimport { Data, DataIterator } from '../../utils/Data';\nimport { Predicted } from '../../utils/Predicted';\nimport Predictor from '../../../../common/Predictor';\nimport OptionRL from '../../../../common/OptionsRegression';\n\nexport class StrategyRLOG implements Strategy {\n    predicted: Predicted = new Predicted();\n    data!: Data;\n    toPredict?: number;\n\n    predict(data: Data, predictor: Predictor<OptionRL>) {\n        this.predicted.clear();\n\n        this.toPredict = predictor.getOpt().getToPredict();\n        const base = 1 - (this.toPredict || 0); //the other one\n        const coeff = predictor.getCoefficients();\n\n        const f = (x: number) => {\n            return coeff[0] + coeff[1] * Math.log(x);\n        };\n\n        if (!data) {\n            throw Error('Data not found');\n        }\n\n        this.data = data;\n\n        let it = new DataIterator(this.data);\n        let val;\n        while ((val = it.next())) {\n            if (val.a || val.b) {\n                this.predicted.addValues({ value: f(base === 0 ? val.a : val.b), time: val.time });\n            }\n        }\n\n        return this.predicted;\n    }\n\n    saveToInflux() {\n        const index = this.predicted.size() - 1;\n\n        $.post({\n            url: 'http://localhost:8086/write?db=telegraf',\n            data:\n                'predictionRLOG value=' +\n                this.predicted.getAt(index).value +\n                ' ' +\n                this.predicted.getAt(index).time +\n                '000000', // + zeros for wrong time format\n        });\n\n        const time = this.predicted.getAt(index).time;\n        let diff;\n        if (!this.toPredict || this.toPredict === 0) {\n            diff = this.data.getAt(index).a - this.predicted.getAt(index).value;\n        } else {\n            diff = this.data.getAt(index).b - this.predicted.getAt(index).value;\n        }\n\n        $.post({\n            url: 'http://localhost:8086/write?db=telegraf',\n            data: 'predictionDiffRLOG value=' + Math.abs(diff) + ' ' + time + '000000', // + zeros for wrong time format\n        });\n    }\n}\n","import { Strategy } from '../Strategy';\nimport { Data, DataIterator } from '../../utils/Data';\nimport { Predicted } from '../../utils/Predicted';\nimport OptionSVM from '../../../../common/OptionsSVM';\nimport Predictor from '../../../../common/Predictor';\n\nexport class StrategySVM implements Strategy {\n    predicted: Predicted = new Predicted();\n\n    predict(data: Data, predictor: Predictor<OptionSVM>) {\n        this.predicted.clear();\n\n        const first = predictor.getOpt().getFirstQuery() || 0;\n        const coeff = predictor.getCoefficients();\n\n        const f = (x1: number, x2: number) => {\n            return x1 * coeff[0] + x2 * coeff[1] + coeff[2];\n        };\n\n        if (!data) {\n            throw Error('Data not found');\n        }\n\n        let it = new DataIterator(data);\n        let val;\n        while ((val = it.next())) {\n            if (val.a || val.b) {\n                const v = first === 0 ? f(val.a, val.b) : f(val.b, val.a);\n                let cls = v === 0 ? 0 : v > 0 ? 1 : -1; //classification 1 / -1\n\n                this.predicted.addValues({ value: cls, time: val.time });\n            }\n        }\n\n        return this.predicted;\n    }\n\n    saveToInflux() {\n        const meas = this.predicted.getAt(this.predicted.size() - 1);\n        $.post({\n            url: 'http://localhost:8086/write?db=telegraf',\n            data: 'predictionSVM value=' + meas.value + ' ' + meas.time + '000000', // + zeros for wrong time format\n        });\n    }\n}\n","import { PureComponent } from 'react';\nimport { PanelEditorProps } from '@grafana/data';\nimport { Props } from '../Props';\n\nexport class Config extends PureComponent<PanelEditorProps<Props>> {}\n","import React from 'react';\nimport { PanelOptionsGroup } from '@grafana/ui';\nimport { Config } from '../Config';\nimport OptionRL from '../../../../common/OptionsRegression';\nimport Predictor from '../../../../common/Predictor';\n\nexport class ConfigRL extends Config {\n    private predictor?: Predictor<OptionRL>;\n\n    private getSeriesNames() {\n        return this.props.data.series.map(serie => {\n            return serie.name || 'unknown';\n        });\n    }\n\n    renderQueryOptions() {\n        const seriesName = this.getSeriesNames();\n\n        const options: JSX.Element[] = [];\n        for (const i of seriesName.keys()) {\n            options.push(\n                <option value={i} selected={this.predictor?.getOpt().getToPredict() === i}>\n                    {seriesName[i]}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    setToPredict(value: string) {\n        let opt: OptionRL = this.props.options.predictor?.getOpt();\n        opt.setToPredict(Number.parseInt(value, 10));\n        this.render();\n    }\n\n    render() {\n        this.predictor = this.props.options.predictor;\n        if (!this.predictor?.getOpt().getToPredict()) {\n            this.predictor?.getOpt().setToPredict(0);\n        }\n        return (\n            <PanelOptionsGroup title=\"RL\">\n                <p>{this.predictor?.getPredFun() ? 'Function: ' + this.predictor?.getPredFun() : ''}</p>\n                <label className=\"gf-form-label width-10\" style={{ display: 'inline-block' }}>\n                    {' '}\n                    y (value to predict){' '}\n                </label>\n                <div className=\"gf-form-select-wrapper width-10\" style={{ display: 'inline-block' }}>\n                    <select\n                        className=\"input-small gf-form-input\"\n                        onChange={event => this.setToPredict(event.target.value)}\n                    >\n                        {this.renderQueryOptions()}\n                    </select>\n                </div>\n            </PanelOptionsGroup>\n        );\n    }\n}\n","import React from 'react';\nimport { PanelOptionsGroup } from '@grafana/ui';\nimport { Config } from '../Config';\nimport OptionRL from '../../../../common/OptionsRegression';\nimport Predictor from '../../../../common/Predictor';\n\nexport class ConfigREXP extends Config {\n    private predictor?: Predictor<OptionRL>;\n\n    private getSeriesNames() {\n        return this.props.data.series.map(serie => {\n            return serie.name || 'unknown';\n        });\n    }\n\n    renderQueryOptions() {\n        const seriesName = this.getSeriesNames();\n\n        const options: JSX.Element[] = [];\n        for (const i of seriesName.keys()) {\n            options.push(\n                <option value={i} selected={this.predictor?.getOpt().getToPredict() === i}>\n                    {seriesName[i]}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    setToPredict(value: string) {\n        let opt: OptionRL = this.props.options.predictor?.getOpt();\n        opt.setToPredict(Number.parseInt(value, 10));\n        this.render();\n    }\n\n    render() {\n        this.predictor = this.props.options.predictor;\n        if (!this.predictor?.getOpt().getToPredict()) {\n            this.predictor?.getOpt().setToPredict(0);\n        }\n        return (\n            <PanelOptionsGroup title=\"REXP\">\n                <p>{this.predictor?.getPredFun() ? 'Function: ' + this.predictor?.getPredFun() : ''}</p>\n                <label className=\"gf-form-label width-10\" style={{ display: 'inline-block' }}>\n                    {' '}\n                    y (value to predict){' '}\n                </label>\n                <div className=\"gf-form-select-wrapper width-10\" style={{ display: 'inline-block' }}>\n                    <select\n                        className=\"input-small gf-form-input\"\n                        onChange={event => this.setToPredict(event.target.value)}\n                    >\n                        {this.renderQueryOptions()}\n                    </select>\n                </div>\n            </PanelOptionsGroup>\n        );\n    }\n}\n","import React from 'react';\nimport { PanelOptionsGroup } from '@grafana/ui';\nimport { Config } from '../Config';\nimport OptionRL from '../../../../common/OptionsRegression';\nimport Predictor from '../../../../common/Predictor';\n\nexport class ConfigRLOG extends Config {\n    private predictor?: Predictor<OptionRL>;\n\n    private getSeriesNames() {\n        return this.props.data.series.map(serie => {\n            return serie.name || 'unknown';\n        });\n    }\n\n    renderQueryOptions() {\n        const seriesName = this.getSeriesNames();\n\n        const options: JSX.Element[] = [];\n        for (const i of seriesName.keys()) {\n            options.push(\n                <option value={i} selected={this.predictor?.getOpt().getToPredict() === i}>\n                    {seriesName[i]}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    setToPredict(value: string) {\n        let opt: OptionRL = this.props.options.predictor?.getOpt();\n        opt.setToPredict(Number.parseInt(value, 10));\n        this.render();\n    }\n\n    render() {\n        this.predictor = this.props.options.predictor;\n        if (!this.predictor?.getOpt().getToPredict()) {\n            this.predictor?.getOpt().setToPredict(0);\n        }\n        return (\n            <PanelOptionsGroup title=\"RLOG\">\n                <p>{this.predictor?.getPredFun() ? 'Function: ' + this.predictor?.getPredFun() : ''}</p>\n                <label className=\"gf-form-label width-10\" style={{ display: 'inline-block' }}>\n                    {' '}\n                    y (value to predict){' '}\n                </label>\n                <div className=\"gf-form-select-wrapper width-10\" style={{ display: 'inline-block' }}>\n                    <select\n                        className=\"input-small gf-form-input\"\n                        onChange={event => this.setToPredict(event.target.value)}\n                    >\n                        {this.renderQueryOptions()}\n                    </select>\n                </div>\n            </PanelOptionsGroup>\n        );\n    }\n}\n","import React from 'react';\nimport { PanelOptionsGroup } from '@grafana/ui';\nimport { Config } from '../Config';\nimport OptionSVM from '../../../../common/OptionsSVM';\nimport Predictor from '../../../../common/Predictor';\n\nexport class ConfigSVM extends Config {\n    private predictor?: Predictor<OptionSVM>;\n\n    private getSeriesNames() {\n        return this.props.data.series.map(serie => {\n            return serie.name || 'unknown';\n        });\n    }\n\n    renderQueryOptions() {\n        const seriesName = this.getSeriesNames();\n\n        const options: JSX.Element[] = [];\n        for (const i of seriesName.keys()) {\n            options.push(\n                <option value={i} selected={this.predictor?.getOpt().getFirstQuery() === i}>\n                    {seriesName[i]}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    setFirstQuery(value: string) {\n        let opt: OptionSVM = this.props.options.predictor?.getOpt();\n        opt.setFirstQuery(Number.parseInt(value, 10));\n        this.render();\n    }\n\n    render() {\n        this.predictor = this.props.options.predictor;\n        if (!this.predictor?.getOpt().getFirstQuery()) {\n            this.predictor?.getOpt().setFirstQuery(0);\n        }\n        return (\n            <PanelOptionsGroup title=\"SVM\">\n                <p>{this.predictor?.getPredFun() ? 'Function: ' + this.predictor?.getPredFun() : ''}</p>\n                <label className=\"gf-form-label width-10\" style={{ display: 'inline-block' }}>\n                    {' '}\n                    x1 (first query){' '}\n                </label>\n                <div className=\"gf-form-select-wrapper width-10\" style={{ display: 'inline-block' }}>\n                    <select\n                        className=\"input-small gf-form-input\"\n                        onChange={event => this.setFirstQuery(event.target.value)}\n                    >\n                        {this.renderQueryOptions()}\n                    </select>\n                </div>\n            </PanelOptionsGroup>\n        );\n    }\n}\n","import { PureComponent } from 'react';\r\nimport { StrategyRL } from './RL/StrategyRL';\r\nimport { StrategyREXP } from './REXP/StrategyREXP';\r\nimport { StrategyRLOG } from './RLOG/StrategyRLOG';\r\nimport { StrategySVM } from './SVM/StrategySVM';\r\nimport { Strategy } from './Strategy';\r\nimport { ConfigRL } from './RL/ConfigRL';\r\nimport { ConfigREXP } from './REXP/ConfigREXP';\r\nimport { ConfigRLOG } from './RLOG/ConfigRLOG';\r\nimport { ConfigSVM } from './SVM/ConfigSVM';\r\nimport Option from '../../../common/Options';\r\nimport OptionRL from '../../../common/OptionsRegression';\r\nimport OptionSVM from '../../../common/OptionsSVM';\r\n\r\nexport const strategies: { [index: string]: Strategy } = {\r\n    RL: new StrategyRL(),\r\n    SVM: new StrategySVM(),\r\n    REXP: new StrategyREXP(),\r\n    RLOG: new StrategyRLOG(),\r\n};\r\n\r\nexport const configs: { [index: string]: typeof PureComponent } = {\r\n    RL: ConfigRL,\r\n    SVM: ConfigSVM,\r\n    REXP: ConfigREXP,\r\n    RLOG: ConfigRLOG,\r\n};\r\n\r\nexport const options: { [index: string]: Option } = {\r\n    RL: new OptionRL(),\r\n    SVM: new OptionSVM(),\r\n    REXP: new OptionRL(),\r\n    RLOG: new OptionRL(),\r\n};\r\n","import Option from './Options';\n\nexport default class OptionSVM implements Option {\n    private C = 1;\n    private maxiter = 10000;\n    private numpass = 10;\n    private firstQuery = 0;\n\n    fromJSON(json: { C: number; maxiter: number; numpass: number; firstQuery: number }) {\n        this.C = json.C;\n        this.maxiter = json.maxiter;\n        this.numpass = json.numpass;\n        this.firstQuery = json.firstQuery || 0;\n        return this;\n    }\n\n    setValueFile(config: string): void {\n        try {\n            let predictor = JSON.parse(config);\n            this.C = predictor.opt.C;\n            this.maxiter = predictor.opt.maxiter;\n            this.numpass = predictor.opt.numpass;\n        } catch (e) {\n            throw new Error('Predictor bad formatted');\n        }\n    }\n\n    getC(): number {\n        return this.C;\n    }\n\n    getMaxIter(): number {\n        return this.maxiter;\n    }\n\n    getNumPass(): number {\n        return this.numpass;\n    }\n\n    getFirstQuery(): number {\n        return this.firstQuery;\n    }\n\n    setC(c: number): void {\n        this.C = c;\n    }\n\n    setMaxIter(m: number): void {\n        this.maxiter = m;\n    }\n\n    setNumPass(n: number): void {\n        this.numpass = n;\n    }\n\n    setFirstQuery(firstQuery: number): void {\n        this.firstQuery = firstQuery;\n    }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__10__;","import Predictor from 'common/Predictor';\nimport { Data } from 'panels/PredictionPanel/utils/Data';\nimport { Predicted } from 'panels/PredictionPanel/utils/Predicted';\nimport { strategies } from './strategies/strategies';\nimport { Strategy } from './strategies/Strategy';\nimport Option from '../../common/Options';\n\nexport class Model {\n    private data?: Data;\n    private predicted?: Predicted;\n    private predictor?: Predictor<any>;\n    private strategy?: Strategy;\n\n    setData(data: Data) {\n        this.data = data;\n    }\n\n    setPredictor(predictor: Predictor<Option>) {\n        this.predictor = predictor;\n        if (!strategies[predictor.getAlgorithm()]) {\n            throw Error('Wrong algorithm');\n        }\n        this.strategy = strategies[predictor.getAlgorithm()];\n    }\n\n    predict() {\n        if (!this.data || !this.predictor) {\n            throw Error('Predictor not found');\n        }\n        this.predicted = this.strategy?.predict(this.data, this.predictor);\n\n        if (!this.predicted || this.predicted.size() < 1) {\n            throw Error('Data not predicted');\n        }\n        return this.predicted.getAt(this.predicted.size() - 1).value;\n    }\n\n    async saveToInflux() {\n        if (!this.predicted) {\n            throw Error('Predicted data not found');\n        }\n        if (!this.strategy) {\n            throw Error('Algorithm not found');\n        }\n\n        this.strategy.saveToInflux();\n    }\n}\n","import React, { PureComponent } from 'react';\nimport Option from 'common/Options';\n\ninterface Props {\n    algorithm: string;\n    coefficients: any[];\n    opt: Option;\n    accuracy?: number;\n    lastValue?: number;\n    pause: () => void;\n    start: () => void;\n}\n\nexport class PanelView extends PureComponent<Props> {\n    btn_stop: any;\n    btn_start: any;\n\n    componentDidMount() {\n        this.btn_stop = document.getElementById('btn_stop');\n        this.btn_start = document.getElementById('btn_start');\n    }\n\n    private pause = () => {\n        this.props.pause();\n        if (this.btn_stop) {\n            this.btn_stop.hidden = true;\n        }\n        if (this.btn_start) {\n            this.btn_start.hidden = false;\n        }\n    };\n\n    private start = () => {\n        this.props.start();\n        if (this.btn_stop) {\n            this.btn_stop.hidden = false;\n        }\n        if (this.btn_start) {\n            this.btn_start.hidden = true;\n        }\n    };\n\n    render() {\n        const { algorithm, coefficients, opt, lastValue, accuracy } = this.props;\n\n        return (\n            <div>\n                <pre>\n                    - Algorithm: {algorithm + '\\n'}- Coefficients: {coefficients + '\\n'}\n                    {opt ? '- Options: ' + JSON.stringify(opt, null, 4) + '\\n' : ''}- Accuracy: {accuracy + '\\n'}\n                </pre>\n                <div style={{ textAlign: 'center' }}>\n                    <h1>{lastValue}</h1>\n                    <button id=\"btn_stop\" className=\"btn btn-danger\" onClick={this.pause}>\n                        {'Stop'}\n                    </button>\n                    <button id=\"btn_start\" className=\"btn btn-success\" onClick={this.start} hidden>\n                        {'Start'}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { PureComponent } from 'react';\nimport { PanelProps } from '@grafana/data';\n\nimport { Props } from './Props';\nimport { Data } from 'panels/PredictionPanel/utils/Data';\nimport { Model } from './Model';\nimport { PanelView } from './PanelView';\nimport Predictor from '../../common/Predictor';\n\nexport class PanelController extends PureComponent<PanelProps<Props>> {\n    private model: Model;\n    private paused = false;\n    private lastValue?: number;\n\n    constructor(props: PanelProps) {\n        super(props);\n        this.model = new Model();\n    }\n\n    private setData() {\n        const d = Data.fromSeries(this.props.data.series);\n        this.model.setData(d);\n    }\n\n    private setPredictor() {\n        if (this.props.options.predictor) {\n            this.model.setPredictor(this.props.options.predictor);\n        }\n    }\n\n    private predict() {\n        this.lastValue = this.model.predict();\n    }\n\n    private saveToInflux() {\n        this.model.saveToInflux();\n    }\n\n    private pause() {\n        this.paused = true;\n    }\n    private start() {\n        this.paused = false;\n    }\n\n    private updatePrediction() {\n        this.setData();\n        this.setPredictor();\n        this.predict();\n        this.saveToInflux();\n    }\n\n    private parsePredictor() {\n        try {\n            this.props.options.predictor?.getAlgorithm();\n        } catch (e) {\n            const json: any = this.props.options.predictor;\n            this.props.options.predictor = Predictor.fromJSON(json);\n        }\n    }\n\n    render() {\n        this.parsePredictor();\n\n        if (!this.props.options.predictor) {\n            return <p> Select a predictor </p>;\n        }\n\n        if (!this.paused) {\n            this.updatePrediction();\n        }\n        const predictor = this.props.options.predictor;\n\n        return (\n            <div>\n                <PanelView\n                    algorithm={predictor.getAlgorithm()}\n                    coefficients={predictor.getCoefficients()}\n                    opt={predictor.getOpt()}\n                    accuracy={predictor.getAcc()}\n                    lastValue={this.lastValue}\n                    pause={() => this.pause()}\n                    start={() => this.start()}\n                />\n            </div>\n        );\n    }\n}\n","import React, { PureComponent } from 'react';\nimport { PanelOptionsGrid, PanelOptionsGroup } from '@grafana/ui';\nimport { Props } from './Props';\nimport { PanelEditorProps } from '@grafana/data';\nimport { configs } from './strategies/strategies';\nimport Predictor from 'common/Predictor';\n\nexport class EditorView extends PureComponent<PanelEditorProps<Props>> {\n    private importPredictor(target: HTMLInputElement) {\n        const reader = new FileReader();\n        if (target.files == null) {\n            throw new Error('File not selected');\n        }\n        reader.readAsText(target.files[0]);\n        reader.onload = event => {\n            try {\n                this.props.options.predictor = Predictor.fromJSON(event.target?.result?.toString());\n            } catch (e) {\n                alert(e);\n            }\n            this.render();\n        };\n    }\n\n    private parsePredictor() {\n        try {\n            this.props.options.predictor?.getAlgorithm();\n        } catch (e) {\n            const json: any = this.props.options.predictor;\n            this.props.options.predictor = Predictor.fromJSON(json);\n        }\n    }\n\n    render() {\n        this.parsePredictor();\n        const predictor = this.props.options.predictor;\n\n        const algorithm = predictor?.getAlgorithm();\n        let Config;\n        if (algorithm && configs[algorithm]) {\n            Config = configs[algorithm];\n        } else {\n            Config = typeof React.PureComponent;\n        }\n\n        return (\n            <div>\n                <PanelOptionsGrid>\n                    <PanelOptionsGroup title=\"Import predictor\">\n                        <input\n                            className=\"input gf-input gf-file\"\n                            type=\"file\"\n                            name=\"Import\"\n                            id=\"import\"\n                            onChange={event => this.importPredictor(event.target)}\n                        />\n                    </PanelOptionsGroup>\n                    <Config data={this.props.data} options={this.props.options} />\n                </PanelOptionsGrid>\n            </div>\n        );\n    }\n}\n","import { PanelPlugin } from '@grafana/data';\nimport { PanelController } from './PanelController';\nimport { EditorView } from './EditorView';\n\nexport const plugin = new PanelPlugin(PanelController).setEditor(EditorView);\n"],"sourceRoot":""}